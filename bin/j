#!/usr/bin/env ruby

require "j"
require "commander/import"
require "date"
require "tempfile"

J::Database::connect

program :name, "j"
program :version, File.read(File.join(File.dirname(__FILE__),"../version.txt"))
program :description, "Journalling application"

make_item = lambda do |c, type|
  c.syntax = "j #{type} \"Text goes here\""
  c.option "--visual", "Switch to visual editor to type this up"
  c.description = "Add a new #{type} to your journal. If text is not supplied, will read from stdin."

  c.action do |args, opts|
    en = J::Entry.create do |e|
      e.body = if args.empty?
        if opts.visual
          t = Tempfile.new("j")
          t.close
          `subl -w #{t.path}`
          File.read(t.path)
        else
          $stdin.read
        end
      else
        args.shift
      end
      e.entry_type = type
      e.auto_tag!
    end
    puts "Entry created:\n#{en}"
  end
end

command :update do |c|
  c.syntax = "j update"
  c.description = "Ensure we're running the latest database version."

  c.action do
    puts "Checking now..."
    J::Database::ensure_latest_version!
    puts "Database status checked!"
  end
end

command :note do |c|
  make_item[c, :note]
end

command :event do |c|
  make_item[c,:event]
end

command :today do |c|
  c.syntax = "j list"
  c.description = "List all of today's bullet journal entries."

  c.action do |args|
    midnight_today = Date.today.to_time.utc
    entries = J::Entry.where("created_at > ?", midnight_today)
    entries.each do |e|
      puts e
    end
  end
end

command default: :today